from datetime import datetimefrom typing import Optionalfrom pydantic import BaseModel, ConfigDict, Fieldclass ConcesionarioBase(BaseModel):    nombre: str = Field(        ...,        min_length=2,        max_length=255,        description="Nombre del concesionario",    )    activo: bool = Field(True, description="Estado activo del concesionario")class ConcesionarioCreate(ConcesionarioBase):    passclass ConcesionarioUpdate(BaseModel):    nombre: Optional[str] = Field(None, min_length=2, max_length=255)    activo: Optional[bool] = Noneclass ConcesionarioResponse(ConcesionarioBase):    id: int    created_at: Optional[datetime] = None    updated_at: Optional[datetime] = None    fecha_eliminacion: Optional[datetime] = None    model_config = ConfigDict(from_attributes=True)class ConcesionarioListResponse(BaseModel):    items: list[ConcesionarioResponse]    total: int    page: int    size: int    pages: int