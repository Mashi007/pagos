{
  "timestamp": "2025-10-21T17:41:13.375574",
  "services_analyzed": 11,
  "overall_score": 61.62,
  "services": [
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\amortizacion_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": true,
        "forbidden_words": true,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 88.89,
      "metrics": {
        "total_functions": 7,
        "total_classes": 1,
        "total_lines": 426,
        "cyclomatic_complexity": 27,
        "average_function_length": 9.142857142857142,
        "max_function_length": 16
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\auth_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": true,
        "forbidden_words": true,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 88.89,
      "metrics": {
        "total_functions": 5,
        "total_classes": 1,
        "total_lines": 265,
        "cyclomatic_complexity": 17,
        "average_function_length": 6.6,
        "max_function_length": 12
      },
      "performance_recommendations": []
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\email_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": false,
        "indentation": false,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 55.56,
      "metrics": {
        "total_functions": 3,
        "total_classes": 1,
        "total_lines": 301,
        "cyclomatic_complexity": 8,
        "average_function_length": 5.0,
        "max_function_length": 9
      },
      "performance_recommendations": []
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\logging_config.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": false,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 66.67,
      "metrics": {
        "total_functions": 19,
        "total_classes": 2,
        "total_lines": 321,
        "cyclomatic_complexity": 41,
        "average_function_length": 3.3684210526315788,
        "max_function_length": 8
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\ml_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": false,
        "indentation": false,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 55.56,
      "metrics": {
        "total_functions": 39,
        "total_classes": 9,
        "total_lines": 1587,
        "cyclomatic_complexity": 158,
        "average_function_length": 3.6153846153846154,
        "max_function_length": 13
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño",
        "Considerar dividir el módulo en múltiples archivos"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\notification_multicanal_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": false,
        "indentation": true,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 66.67,
      "metrics": {
        "total_functions": 12,
        "total_classes": 7,
        "total_lines": 1124,
        "cyclomatic_complexity": 32,
        "average_function_length": 3.75,
        "max_function_length": 9
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\quality_standards.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": false,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 66.67,
      "metrics": {
        "total_functions": 15,
        "total_classes": 2,
        "total_lines": 397,
        "cyclomatic_complexity": 73,
        "average_function_length": 4.666666666666667,
        "max_function_length": 11
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\validate_quality.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": true,
        "forbidden_words": false,
        "error_handling": false,
        "logging": false
      },
      "issues": [],
      "score": 66.67,
      "metrics": {
        "total_functions": 1,
        "total_classes": 0,
        "total_lines": 127,
        "cyclomatic_complexity": 15,
        "average_function_length": 25.0,
        "max_function_length": 25
      },
      "performance_recommendations": []
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\validators_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": true,
        "class_structure": true,
        "function_length": true,
        "line_length": false,
        "indentation": false,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 55.56,
      "metrics": {
        "total_functions": 24,
        "total_classes": 12,
        "total_lines": 1715,
        "cyclomatic_complexity": 175,
        "average_function_length": 2.7916666666666665,
        "max_function_length": 6
      },
      "performance_recommendations": [
        "Reducir complejidad ciclomática usando patrones de diseño",
        "Considerar dividir el módulo en múltiples archivos"
      ]
    },
    {
      "file_path": "C:\\Users\\PORTATIL\\Documents\\GitHub\\pagos\\backend\\app\\services\\whatsapp_service.py",
      "validations": {
        "has_docstring": true,
        "proper_imports": false,
        "class_structure": true,
        "function_length": true,
        "line_length": true,
        "indentation": true,
        "forbidden_words": false,
        "error_handling": false,
        "logging": true
      },
      "issues": [],
      "score": 66.67,
      "metrics": {
        "total_functions": 5,
        "total_classes": 1,
        "total_lines": 405,
        "cyclomatic_complexity": 13,
        "average_function_length": 3.6,
        "max_function_length": 6
      },
      "performance_recommendations": []
    }
  ],
  "recommendations": [
    "Implementar logging estructurado en todos los servicios",
    "Agregar docstrings a todas las clases y métodos públicos",
    "Implementar manejo de errores consistente",
    "Revisar longitud de funciones (máximo 50 líneas)",
    "Eliminar palabras prohibidas de producción",
    "Implementar validación de entrada en todos los métodos"
  ],
  "critical_issues": [
    {
      "file": "email_service.py",
      "score": 55.56,
      "issues": []
    },
    {
      "file": "logging_config.py",
      "score": 66.67,
      "issues": []
    },
    {
      "file": "ml_service.py",
      "score": 55.56,
      "issues": []
    },
    {
      "file": "notification_multicanal_service.py",
      "score": 66.67,
      "issues": []
    },
    {
      "file": "quality_standards.py",
      "score": 66.67,
      "issues": []
    },
    {
      "file": "validate_quality.py",
      "score": 66.67,
      "issues": []
    },
    {
      "file": "validators_service.py",
      "score": 55.56,
      "issues": []
    },
    {
      "file": "whatsapp_service.py",
      "score": 66.67,
      "issues": []
    }
  ]
}