#!/usr/bin/env python3
"""
Script de validaci√≥n para verificar que los modelos se pueden importar correctamente.
"""

import sys
import os

# Agregar el directorio backend al path
backend_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, backend_dir)

def validate_models():
    """Valida que los modelos se puedan importar correctamente."""
    print("üîç Validando importaci√≥n de modelos...")
    
    try:
        # Importar Base primero
        from app.db.session import Base
        print("‚úÖ Base importada correctamente")
        
        # Importar modelos uno por uno para identificar problemas espec√≠ficos
        from app.models.user import User
        print("‚úÖ User importado correctamente")
        
        from app.models.cliente import Cliente
        print("‚úÖ Cliente importado correctamente")
        
        from app.models.prestamo import Prestamo
        print("‚úÖ Prestamo importado correctamente")
        
        from app.models.pago import Pago
        print("‚úÖ Pago importado correctamente")
        
        from app.models.amortizacion import Cuota
        print("‚úÖ Cuota importada correctamente")
        
        from app.models.aprobacion import Aprobacion
        print("‚úÖ Aprobacion importada correctamente")
        
        from app.models.auditoria import Auditoria
        print("‚úÖ Auditoria importada correctamente")
        
        from app.models.notificacion import Notificacion
        print("‚úÖ Notificacion importada correctamente")
        
        # Importar todos juntos como en __init__.py
        from app.models import (
            Base, User, Cliente, Prestamo, Pago, Cuota, 
            Aprobacion, Auditoria, Notificacion
        )
        print("‚úÖ Todos los modelos importados correctamente desde __init__.py")
        
        print("üéâ Validaci√≥n de modelos completada con √©xito!")
        return True
        
    except Exception as e:
        print(f"‚ùå Error al importar modelos: {e}")
        import traceback
        traceback.print_exc()
        return False

def validate_endpoints():
    """Valida que los endpoints se puedan importar correctamente."""
    print("\nüîç Validando importaci√≥n de endpoints...")
    
    try:
        # Importar endpoint de aprobaciones que causaba problemas
        from app.api.v1.endpoints import aprobaciones
        print("‚úÖ Endpoint de aprobaciones importado correctamente")
        
        # Importar todos los endpoints
        from app.api.v1.endpoints import (
            health, auth, users, clientes, prestamos, pagos,
            amortizacion, conciliacion, reportes, kpis,
            notificaciones, aprobaciones, auditoria, configuracion
        )
        print("‚úÖ Todos los endpoints importados correctamente")
        
        print("üéâ Validaci√≥n de endpoints completada con √©xito!")
        return True
        
    except Exception as e:
        print(f"‚ùå Error al importar endpoints: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Funci√≥n principal de validaci√≥n."""
    print("üöÄ Iniciando validaci√≥n de la aplicaci√≥n...")
    print("=" * 50)
    
    success = True
    
    # Validar modelos
    if not validate_models():
        success = False
    
    # Validar endpoints
    if not validate_endpoints():
        success = False
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ ¬°Todas las validaciones pasaron correctamente!")
        print("‚úÖ La aplicaci√≥n deber√≠a iniciar sin problemas")
    else:
        print("‚ùå Hay errores que necesitan ser corregidos")
        sys.exit(1)

if __name__ == "__main__":
    main()