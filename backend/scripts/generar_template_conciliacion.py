#!/usr/bin/env python3
"""
Script para generar template Excel de conciliaci√≥n bancaria
"""

import pandas as pd
from openpyxl import Workbook
from openpyxl.worksheet.datavalidation import DataValidation
from datetime import datetime
import os

def crear_template_conciliacion():
    """Crear template Excel para conciliaci√≥n bancaria"""
    
    # Crear workbook
    wb = Workbook()
    
    # HOJA 1: INSTRUCCIONES
    ws_instrucciones = wb.active
    ws_instrucciones.title = "Instrucciones"
    
    instrucciones = [
        ["INSTRUCCIONES PARA CONCILIACI√ìN BANCARIA"],
        [""],
        ["1. FORMATO DE ARCHIVO:"],
        ["   - Archivo Excel (.xlsx)"],
        ["   - Primera fila: encabezados de columnas"],
        ["   - Datos desde la segunda fila"],
        ["   - M√°ximo 100 registros por archivo"],
        [""],
        ["2. COLUMNAS REQUERIDAS:"],
        ["   - fecha: Fecha real del pago (formato YYYY-MM-DD)"],
        ["   - numero_documento: N√∫mero de documento del pago"],
        [""],
        ["3. PROCESO DE CONCILIACI√ìN:"],
        ["   - El sistema compara el n√∫mero de documento con la base de datos"],
        ["   - Si hay coincidencia EXACTA: se marca como CONCILIADO"],
        ["   - Si NO hay coincidencia: se marca como PENDIENTE"],
        [""],
        ["4. VALIDACIONES:"],
        ["   - Fecha debe estar en formato YYYY-MM-DD"],
        ["   - N√∫mero de documento debe coincidir EXACTAMENTE"],
        ["   - No se permiten caracteres especiales adicionales"],
        [""],
        ["5. EJEMPLOS DE DATOS V√ÅLIDOS:"],
        ["   - fecha: '2024-01-15'"],
        ["   - numero_documento: 'DOC001234'"],
        [""],
        ["6. NOTAS IMPORTANTES:"],
        ["   - No eliminar las columnas"],
        ["   - No cambiar el orden de las columnas"],
        ["   - Usar solo caracteres ASCII"],
        ["   - Verificar que los n√∫meros de documento sean exactos"],
        ["   - Un archivo por vez"],
        [""],
        ["7. RESULTADO:"],
        ["   - Los pagos conciliados aparecer√°n en el resumen"],
        ["   - Los pendientes requerir√°n revisi√≥n manual"],
        [""],
        ["8. DESCONCILIACI√ìN:"],
        ["   - Se puede desconciliar un pago ya conciliado"],
        ["   - Requiere formulario con justificaci√≥n"],
        ["   - Se registra en auditor√≠a"],
        [""],
        ["FECHA DE GENERACI√ìN: " + datetime.now().strftime("%Y-%m-%d %H:%M:%S")],
        ["GENERADO POR: Sistema de Conciliaci√≥n Bancaria"]
    ]
    
    # Agregar instrucciones a la hoja
    for i, instruccion in enumerate(instrucciones, 1):
        ws_instrucciones.cell(row=i, column=1, value=instruccion[0])
    
    # HOJA 2: TEMPLATE VAC√çA
    ws_template = wb.create_sheet("Template_Conciliacion")
    
    # Encabezados
    encabezados = ["fecha", "numero_documento"]
    for i, encabezado in enumerate(encabezados, 1):
        ws_template.cell(row=1, column=i, value=encabezado)
    
    # Ejemplo de datos
    ejemplo = ["2024-01-15", "DOC001234"]
    for i, valor in enumerate(ejemplo, 1):
        ws_template.cell(row=2, column=i, value=valor)
    
    # Aplicar validaciones
    # Validaci√≥n para fecha (formato YYYY-MM-DD)
    dv_fecha = DataValidation(type="date", formula1="2020-01-01", formula2="2030-12-31")
    dv_fecha.add("A2:A100")
    ws_template.add_data_validation(dv_fecha)
    
    # Guardar archivo
    filename = f"Template_Conciliacion_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    wb.save(filename)
    
    print(f"‚úÖ Template generado: {filename}")
    print(f"üìÅ Ubicaci√≥n: {os.path.abspath(filename)}")
    
    return filename

if __name__ == "__main__":
    print("üöÄ Generando template de conciliaci√≥n bancaria...")
    filename = crear_template_conciliacion()
    print(f"üéØ Template listo para validar: {filename}")
