#!/usr/bin/env python3
"""
Script para monitorear el estado del despliegue
"""
import requests
import time
import json

def verificar_frontend():
    """Verificar si el frontend est√° disponible"""
    try:
        response = requests.get("https://rapicredit.onrender.com", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Frontend disponible")
            return True
        else:
            print(f"‚ö†Ô∏è Frontend respondiendo con status: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Frontend no disponible: {e}")
        return False

def verificar_backend():
    """Verificar si el backend est√° disponible"""
    try:
        response = requests.get("https://pagos-f2qf.onrender.com/api/v1/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Backend disponible")
            return True
        else:
            print(f"‚ö†Ô∏è Backend respondiendo con status: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Backend no disponible: {e}")
        return False

def verificar_bd():
    """Verificar si la base de datos est√° disponible"""
    try:
        response = requests.get("https://pagos-f2qf.onrender.com/api/v1/concesionarios/test-no-auth", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Base de datos disponible")
            return True
        elif response.status_code == 503:
            print("‚ö†Ô∏è Base de datos temporalmente no disponible")
            return False
        else:
            print(f"‚ö†Ô∏è BD respondiendo con status: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Error verificando BD: {e}")
        return False

def monitorear_despliegue():
    """Monitorear el estado del despliegue"""
    print("MONITOREANDO ESTADO DEL DESPLIEGUE")
    print("=" * 50)
    
    max_intentos = 20
    intervalo = 30  # segundos
    
    for intento in range(max_intentos):
        print(f"\n--- Verificaci√≥n {intento + 1}/{max_intentos} ---")
        print(f"Tiempo: {time.strftime('%H:%M:%S')}")
        
        # Verificar frontend
        frontend_ok = verificar_frontend()
        
        # Verificar backend
        backend_ok = verificar_backend()
        
        # Verificar BD
        bd_ok = verificar_bd()
        
        # Resumen
        print(f"\nEstado actual:")
        print(f"  Frontend: {'‚úÖ' if frontend_ok else '‚ùå'}")
        print(f"  Backend: {'‚úÖ' if backend_ok else '‚ùå'}")
        print(f"  Base de datos: {'‚úÖ' if bd_ok else '‚ùå'}")
        
        # Si todo est√° funcionando
        if frontend_ok and backend_ok and bd_ok:
            print("\nüéâ ¬°SISTEMA COMPLETAMENTE FUNCIONAL!")
            print("Puedes usar la aplicaci√≥n normalmente")
            return True
        
        # Si es el √∫ltimo intento
        if intento == max_intentos - 1:
            print("\n‚è∞ Tiempo de monitoreo completado")
            print("El sistema puede seguir despleg√°ndose en segundo plano")
            return False
        
        # Esperar antes del siguiente intento
        print(f"\nEsperando {intervalo} segundos...")
        time.sleep(intervalo)
    
    return False

def main():
    """Funci√≥n principal"""
    print("MONITOR DE DESPLIEGUE - RAPICREDIT")
    print("=" * 60)
    print("Este script monitorear√° el estado del despliegue")
    print("y te notificar√° cuando todo est√© funcionando")
    print()
    
    resultado = monitorear_despliegue()
    
    if resultado:
        print("\n‚úÖ MONITOREO EXITOSO")
        print("El sistema est√° completamente operativo")
    else:
        print("\n‚è≥ MONITOREO COMPLETADO")
        print("El sistema puede seguir despleg√°ndose")
        print("Verifica manualmente en unos minutos")

if __name__ == "__main__":
    main()
