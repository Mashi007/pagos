[tool.pytest.ini_options]
# Configuración de pytest para el sistema de préstamos y cobranza

# Directorios de pruebas
testpaths = ["tests"]

# Patrones de archivos de prueba
python_files = ["test_*.py", "*_test.py"]

# Patrones de clases de prueba
python_classes = ["Test*", "*Test"]

# Patrones de funciones de prueba
python_functions = ["test_*"]

# Marcadores personalizados
markers = [
    "unit: Pruebas unitarias",
    "integration: Pruebas de integración", 
    "e2e: Pruebas end-to-end",
    "slow: Pruebas que tardan más de 5 segundos",
    "database: Pruebas que requieren base de datos",
    "auth: Pruebas de autenticación",
    "validators: Pruebas de validadores",
    "clientes: Pruebas del módulo de clientes",
    "pagos: Pruebas del módulo de pagos",
    "prestamos: Pruebas del módulo de préstamos"
]

# Configuración de logging
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Configuración de cobertura
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80"
]

# Configuración de warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

# Timeout para pruebas
timeout = 300

# Configuración de fixtures
usefixtures = ["test_client", "test_db"]

# Configuración de plugins
plugins = [
    "pytest-cov",
    "pytest-asyncio",
    "pytest-timeout"
]
