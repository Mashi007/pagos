#!/usr/bin/env python3
"""
Test para validar la nueva configuraci√≥n de tel√©fonos venezolanos
Formato: +58 + 10 d√≠gitos (primer d√≠gito no puede ser 0)
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from app.services.validators_service import ValidadorTelefono

def test_telefonos_validos():
    """Test de tel√©fonos v√°lidos"""
    print("üß™ TESTING TEL√âFONOS V√ÅLIDOS")
    print("=" * 50)
    
    casos_validos = [
        ("1234567890", "10 d√≠gitos sin prefijo"),
        ("581234567890", "58 + 10 d√≠gitos"),
        ("+581234567890", "+58 + 10 d√≠gitos completo"),
        ("4241234567", "10 d√≠gitos locales"),
        ("4141234567", "10 d√≠gitos locales"),
        ("4161234567", "10 d√≠gitos locales"),
    ]
    
    for telefono, descripcion in casos_validos:
        resultado = ValidadorTelefono.validar_y_formatear_telefono(telefono, "VENEZUELA")
        estado = "‚úÖ V√ÅLIDO" if resultado["valido"] else "‚ùå INV√ÅLIDO"
        print(f"{estado} {telefono:15} ({descripcion})")
        if resultado["valido"]:
            print(f"    Formateado: {resultado['valor_formateado']}")
        else:
            print(f"    Error: {resultado['error']}")

def test_telefonos_invalidos():
    """Test de tel√©fonos inv√°lidos"""
    print("\nüö´ TESTING TEL√âFONOS INV√ÅLIDOS")
    print("=" * 50)
    
    casos_invalidos = [
        ("0123456789", "Empieza por 0"),
        ("5810123456789", "58 + n√∫mero que empieza por 0"),
        ("+580123456789", "+58 + n√∫mero que empieza por 0"),
        ("123456789", "9 d√≠gitos (muy corto)"),
        ("12345678901", "11 d√≠gitos (muy largo)"),
        ("58123456789", "58 + 9 d√≠gitos"),
        ("+58123456789", "+58 + 9 d√≠gitos"),
        ("5812345678901", "58 + 11 d√≠gitos"),
        ("+5812345678901", "+58 + 11 d√≠gitos"),
        ("", "Vac√≠o"),
        ("abc1234567890", "Contiene letras"),
        ("+591234567890", "C√≥digo de pa√≠s incorrecto"),
    ]
    
    for telefono, descripcion in casos_invalidos:
        resultado = ValidadorTelefono.validar_y_formatear_telefono(telefono, "VENEZUELA")
        estado = "‚úÖ V√ÅLIDO" if resultado["valido"] else "‚ùå INV√ÅLIDO"
        print(f"{estado} {telefono:15} ({descripcion})")
        if resultado["valido"]:
            print(f"    ‚ö†Ô∏è  Deber√≠a ser inv√°lido pero fue aceptado!")
        else:
            print(f"    Error: {resultado['error']}")

def test_formateo():
    """Test de formateo autom√°tico"""
    print("\nüîÑ TESTING FORMATEO AUTOM√ÅTICO")
    print("=" * 50)
    
    casos_formateo = [
        ("1234567890", "Debe agregar +58"),
        ("581234567890", "Debe agregar +"),
        ("+581234567890", "Ya est√° correcto"),
        ("58-123-456-7890", "Debe limpiar guiones"),
        ("58 123 456 7890", "Debe limpiar espacios"),
    ]
    
    for telefono, descripcion in casos_formateo:
        resultado = ValidadorTelefono.validar_y_formatear_telefono(telefono, "VENEZUELA")
        if resultado["valido"]:
            print(f"‚úÖ {telefono:15} ‚Üí {resultado['valor_formateado']} ({descripcion})")
            if resultado.get("cambio_realizado"):
                print(f"    Cambio realizado: {resultado['valor_original']} ‚Üí {resultado['valor_formateado']}")
        else:
            print(f"‚ùå {telefono:15} ({descripcion}) - Error: {resultado['error']}")

def test_requisitos_especificos():
    """Test de requisitos espec√≠ficos"""
    print("\nüìã TESTING REQUISITOS ESPEC√çFICOS")
    print("=" * 50)
    
    requisitos = [
        ("1234567890", "Empieza por +58", "‚úì"),
        ("1234567890", "10 d√≠gitos total", "‚úì"),
        ("1234567890", "Primer d√≠gito no es 0", "‚úì"),
        ("0123456789", "Primer d√≠gito no es 0", "‚úó"),
        ("123456789", "10 d√≠gitos total", "‚úó"),
    ]
    
    for telefono, requisito, esperado in requisitos:
        resultado = ValidadorTelefono.validar_y_formatear_telefono(telefono, "VENEZUELA")
        if resultado["valido"]:
            cumplidos = resultado.get("requisitos_cumplidos", {})
            estado = "‚úÖ" if esperado == "‚úì" else "‚ùå"
            print(f"{estado} {telefono:12} - {requisito}: {estado}")
        else:
            print(f"‚ùå {telefono:12} - {requisito}: Error - {resultado['error']}")

if __name__ == "__main__":
    print("üáªüá™ TEST DE VALIDACI√ìN DE TEL√âFONOS VENEZOLANOS")
    print("Nuevos requisitos: +58 + 10 d√≠gitos (primer d√≠gito no puede ser 0)")
    print("=" * 70)
    
    test_telefonos_validos()
    test_telefonos_invalidos()
    test_formateo()
    test_requisitos_especificos()
    
    print("\n" + "=" * 70)
    print("üèÅ TEST COMPLETADO")
